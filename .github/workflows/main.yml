name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: localhost
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PORT: 5432

    services:
      postgres_main:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST_AUTH_METHOD: trust

        ports:
          - 5432:5432
        options: >-
          -e POSTGRES_HOST_AUTH_METHOD=md5
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "export SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "export AFRICASTAKING_USERNAME=${{ secrets.AFRICASTAKING_USERNAME }}" >> $GITHUB_ENV
          echo "export AFRICASTAKING_API_KEY=${{ secrets.AFRICASTAKING_API_KEY }}" >> $GITHUB_ENV
          echo "export OKTA_DOMAIN=${{ secrets.OKTA_DOMAIN }}" >> $GITHUB_ENV
          echo "export OIDC_RP_CLIENT_ID=${{ secrets.OIDC_RP_CLIENT_ID }}" >> $GITHUB_ENV
          echo "export OIDC_RP_CLIENT_SECRET=${{ secrets.OIDC_RP_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "export DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          coverage run manage.py test
          coverage report -m
